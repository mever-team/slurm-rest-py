# coding: utf-8

"""
    Slurm REST API

    API to access and control Slurm

    The version of the OpenAPI document: Slurm-24.05.2&openapi/slurmdbd&openapi/v0.0.39&openapi/dbv0.0.39&openapi/slurmctld
    Contact: sales@schedmd.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from slurm_rest.models.v0039_reservations_response import V0039ReservationsResponse

class TestV0039ReservationsResponse(unittest.TestCase):
    """V0039ReservationsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V0039ReservationsResponse:
        """Test V0039ReservationsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V0039ReservationsResponse`
        """
        model = V0039ReservationsResponse()
        if include_optional:
            return V0039ReservationsResponse(
                meta = slurm_rest.models.v0/0/39_meta.v0.0.39_meta(
                    plugin = slurm_rest.models.v0_0_39_meta_plugin.v0_0_39_meta_plugin(
                        type = '', 
                        name = '', ), 
                    slurm = slurm_rest.models.v0_0_39_meta_slurm.v0_0_39_meta_Slurm(
                        version = slurm_rest.models.v0_0_39_meta_slurm_version.v0_0_39_meta_Slurm_version(
                            major = 56, 
                            micro = 56, 
                            minor = 56, ), 
                        release = '', ), ),
                errors = [
                    slurm_rest.models.v0/0/39_error.v0.0.39_error(
                        error_number = 56, 
                        error = '', 
                        source = '', 
                        description = '', )
                    ],
                warnings = [
                    slurm_rest.models.v0/0/39_warning.v0.0.39_warning(
                        warning = '', 
                        source = '', 
                        description = '', )
                    ],
                reservations = [
                    slurm_rest.models.v0/0/39_reservation_info.v0.0.39_reservation_info(
                        accounts = '', 
                        burst_buffer = '', 
                        core_count = 56, 
                        core_specializations = [
                            slurm_rest.models.v0/0/39_reservation_core_spec.v0.0.39_reservation_core_spec(
                                node = '', 
                                core = '', )
                            ], 
                        end_time = 56, 
                        features = '', 
                        flags = [
                            'MAINT'
                            ], 
                        groups = '', 
                        licenses = '', 
                        max_start_delay = 56, 
                        name = '', 
                        node_count = 56, 
                        node_list = '', 
                        partition = '', 
                        purge_completed = slurm_rest.models.v0_0_39_reservation_info_purge_completed.v0_0_39_reservation_info_purge_completed(
                            time = slurm_rest.models.v0/0/39_uint32_no_val.v0.0.39_uint32_no_val(
                                set = True, 
                                infinite = True, 
                                number = 56, ), ), 
                        start_time = 56, 
                        watts = slurm_rest.models.v0/0/39_uint32_no_val.v0.0.39_uint32_no_val(
                            set = True, 
                            infinite = True, 
                            number = 56, ), 
                        tres = '', 
                        users = '', )
                    ]
            )
        else:
            return V0039ReservationsResponse(
        )
        """

    def testV0039ReservationsResponse(self):
        """Test V0039ReservationsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
